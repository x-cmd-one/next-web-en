import{_ as e,C as t,o as n,c as o,H as p,w as l,k as s,a as c}from"./chunks/framework.98e11516.js";const v=JSON.parse('{"title":"mawk","titleTemplate":"x-cmd 1 minute get started","description":"x-cmd 1 minute | mawk get started | mawk is an interpreter for the AWK Programming Language","frontmatter":{"name":"mawk","titleTemplate":"x-cmd 1 minute get started","head":[["meta",{"name":"og:title","content":"x-cmd 1 minute | mawk get started"}],["meta",{"name":"og:description","content":"mawk is an interpreter for the AWK Programming Language"}],["meta",{"name":"description","content":"x-cmd 1 minute | mawk get started | mawk is an interpreter for the AWK Programming Language"}]],"items":[{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #F97583\\">&lt;</span><span style=\\"color: #E1E4E8\\"> data.txt x mawk </span><span style=\\"color: #9ECBFF\\">&#39;{ print $0 }&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #D73A49\\">&lt;</span><span style=\\"color: #24292E\\"> data.txt x mawk </span><span style=\\"color: #032F62\\">&#39;{ print $0 }&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"读取文件的数据，并输出 stdout","en":"Reads the data from the file and outputs stdout"},"desc":"Reads the data from the file and outputs stdout"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">echo</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&quot;mawk main body&quot;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #F97583\\">|</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">mawk</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;BEGIN{print &quot;BEGIN&quot;}{print $0}END{print &quot;ENG&quot;}&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">echo</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&quot;mawk main body&quot;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #D73A49\\">|</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">mawk</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;BEGIN{print &quot;BEGIN&quot;}{print $0}END{print &quot;ENG&quot;}&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"BEGIN、END 和 main 代码块的特性","en":"Features of BEGIN, END, and main code blocks"},"desc":"Features of BEGIN, END, and main code blocks"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #F97583\\">&lt;</span><span style=\\"color: #E1E4E8\\"> data.txt x mawk </span><span style=\\"color: #9ECBFF\\">&#39;NR&lt;=2&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #D73A49\\">&lt;</span><span style=\\"color: #24292E\\"> data.txt x mawk </span><span style=\\"color: #032F62\\">&#39;NR&lt;=2&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"筛选出文件前两行数据内容","en":"Filter out the first two lines of data in the file"},"desc":"Filter out the first two lines of data in the file"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">echo</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;hello:the:word&#39;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #F97583\\">|</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">mawk</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;BEGIN{FS=&quot;\\\\n&quot;; RS=&quot;:&quot;} {print $1,$2,$3}&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">echo</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;hello:the:word&#39;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #D73A49\\">|</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">mawk</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;BEGIN{FS=&quot;\\\\n&quot;; RS=&quot;:&quot;} {print $1,$2,$3}&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"使用分隔符号处理数据","en":"Work with data using delimited symbols"},"desc":"Work with data using delimited symbols"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">mawk</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">-v</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">aaa=bbb</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;BEGIN{ bbb=&quot;ccc&quot;; print aaa,bbb }&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">mawk</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">-v</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">aaa=bbb</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;BEGIN{ bbb=&quot;ccc&quot;; print aaa,bbb }&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"将变量值传递到 mawk 中输出","en":"Pass variable values into the output in Mawk"},"desc":"Pass variable values into the output in Mawk"}],"aside":false,"outline":false,"x-term-speg":"1min/mawk.en","x-term-name":"mawk","x-term-desc":"mawk is an interpreter for the AWK Programming Language","x-term-size":"large","links":[{"type":"pkg","text":"mawk","link":"/pkg/mawk"}]},"headers":[],"relativePath":"1min/mawk.md","filePath":"1min/mawk.md"}'),r={name:"1min/mawk.md"},i=s("h1",{id:"mawk",tabindex:"-1"},[c("mawk "),s("a",{class:"header-anchor",href:"#mawk","aria-label":'Permalink to "mawk"'},"​")],-1),d=s("p",{class:"visually-hidden"}," mawk is an interpreter for the AWK Programming Language ",-1);function m(E,y,u,h,g,k){const a=t("OneMinutePage");return n(),o("div",null,[p(a,null,{default:l(()=>[i,d]),_:1})])}const b=e(r,[["render",m]]);export{v as __pageData,b as default};

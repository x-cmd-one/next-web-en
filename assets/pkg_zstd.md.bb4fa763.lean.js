import{_ as o,C as i,o as n,c as r,H as l,w as t,k as e,a}from"./chunks/framework.98e11516.js";const I=JSON.parse('{"title":"zstd","titleTemplate":"x-cmd package | An efficient file compression tool based on the ZStandard algorithm","description":"x-cmd package zstd | An efficient file compression tool based on the ZStandard algorithm","frontmatter":{"name":"zstd","titleTemplate":"x-cmd package | An efficient file compression tool based on the ZStandard algorithm","head":[["meta",{"name":"og:title","content":"zstd | x-cmd package"}],["meta",{"name":"og:description","content":"An efficient file compression tool based on the ZStandard algorithm"}],["meta",{"name":"description","content":"x-cmd package zstd | An efficient file compression tool based on the ZStandard algorithm"}]],"links":[{"type":"1min","text":"zstd","link":"/1min/zstd"},{"type":"mod","text":"`x env` => usage","link":"/mod/env"}],"homepage":"https://facebook.github.io/zstd/","license":"MIT","version":{"stable":"v0.0.1"},"support":["linux/arm64","darwin/arm64","linux/x64","darwin/x64","win/x64"],"source":{"repack-official":["https://github.com/x-cmd-build/zstd/releases","https://gitcode.net/x-cmd-build/zstd/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/zstd.en","x-term-name":"zstd","x-term-desc":"An efficient file compression tool based on the ZStandard algorithm","x-term-size":"large"},"headers":[],"relativePath":"pkg/zstd.md","filePath":"pkg/zstd.md"}'),d={name:"pkg/zstd.md"},c=e("h1",{id:"zstd",tabindex:"-1"},[a("zstd "),e("a",{class:"header-anchor",href:"#zstd","aria-label":'Permalink to "zstd"'},"​")],-1),h=e("p",{class:"x-desc"},"An efficient file compression tool based on the ZStandard algorithm",-1),p=e("h2",{id:"introduction",tabindex:"-1"},[a("Introduction "),e("a",{class:"header-anchor",href:"#introduction","aria-label":'Permalink to "Introduction"'},"​")],-1),m=e("p",null,"zstd (Zstandard) is an open-source data compression algorithm and library designed to provide high-performance data compression and decompression. Developed and open-sourced by Facebook, it is a versatile compression algorithm that can be used to compress various types of data, including text, images, audio, and other binary data.",-1),f=e("p",null,"The Zstandard algorithm is a fast and configurable compression algorithm that supports multiple compression levels, allowing you to balance between performance and compression ratio according to your needs.",-1),u=e("h2",{id:"first-time-users",tabindex:"-1"},[a("First-time Users "),e("a",{class:"header-anchor",href:"#first-time-users","aria-label":'Permalink to "First-time Users"'},"​")],-1),g=e("ol",null,[e("li",null,'This article demonstrates "how to quickly use zstd to compress and decompress executable files through x-cmd."'),e("li",null,[a("x-cmd also offers a "),e("a",{href:"/1min/zstd"},"1-minute tutorial"),a(" to help you get started quickly.")])],-1),b=e("h2",{id:"zstd-optimization-for-small-files",tabindex:"-1"},[a("zstd Optimization for Small Files "),e("a",{class:"header-anchor",href:"#zstd-optimization-for-small-files","aria-label":'Permalink to "zstd Optimization for Small Files"'},"​")],-1),z=e("p",null,`When dealing with small amounts of data to compress, compression algorithms face challenges. This is because compression algorithms operate by establishing and updating a dictionary based on patterns in the data processed so far. When the dataset to be compressed is small, there isn't enough "past data" to reference, making it difficult to effectively utilize data characteristics to improve compression.`,-1),_=e("p",null,`To address this, Zstandard introduces a new 'training mode' for optimizing the compression algorithm to fit specific types of data. By training Zstandard, you can provide some data samples (with each sample corresponding to a file), and the training results are stored in a file called a "dictionary." This dictionary must be loaded before compressing and decompressing data. Using this dictionary, Zstandard can achieve better compression rates on small datasets, delivering good compression even with smaller data sizes.`,-1),k=e("h2",{id:"flexible-configuration",tabindex:"-1"},[a("Flexible Configuration "),e("a",{class:"header-anchor",href:"#flexible-configuration","aria-label":'Permalink to "Flexible Configuration"'},"​")],-1),x=e("p",null,"zstd offers extensive configuration options, allowing users to balance performance and compression ratio according to their specific needs. When needed, it can trade compression speed for higher compression ratios (the trade-off between compression speed and compression ratio can be fine-tuned in small increments).",-1),y=e("h2",{id:"rich-language-libraries",tabindex:"-1"},[a("Rich Language Libraries "),e("a",{class:"header-anchor",href:"#rich-language-libraries","aria-label":'Permalink to "Rich Language Libraries"'},"​")],-1),v=e("p",null,[a("zstd is available in up to 45 different languages and their various versions. "),e("a",{href:"https://facebook.github.io/zstd/",target:"_blank",rel:"noreferrer"},"See the specific list here"),a(".")],-1),w=e("h2",{id:"competitors-and-related-works",tabindex:"-1"},[a("Competitors and Related Works "),e("a",{class:"header-anchor",href:"#competitors-and-related-works","aria-label":'Permalink to "Competitors and Related Works"'},"​")],-1),F=e("ol",null,[e("li",null,[a("x-cmd provides the "),e("a",{href:"/mod/zuz"},"zuz"),a(" module, which supports various mainstream formats and offers user-friendly and convenient compression and decompression operations.")]),e("li",null,[e("a",{href:"https://www.zlib.net/",target:"_blank",rel:"noreferrer"},"zlib"),a(' ("z" stands for lossless compression, "lib" stands for library) is the implementation of the popular gzip compression algorithm and is widely used.')]),e("li",null,[e("a",{href:"https://www.7-zip.org/",target:"_blank",rel:"noreferrer"},"7zip"),a(" and "),e("a",{href:"https://www.7-zip.org/sdk.html",target:"_blank",rel:"noreferrer"},"lzma"),a(", "),e("a",{href:"/1min/7za"},"1min for 7zip")]),e("li",null,[e("a",{href:"https://tukaani.org/xz/man/xz.1.html",target:"_blank",rel:"noreferrer"},"xz"),a(" and "),e("a",{href:"https://tukaani.org/xz/",target:"_blank",rel:"noreferrer"},"xz utils")])],-1),C=e("h1",{id:"further-reading",tabindex:"-1"},[a("Further Reading "),e("a",{class:"header-anchor",href:"#further-reading","aria-label":'Permalink to "Further Reading"'},"​")],-1),E=e("ul",null,[e("li",null,[e("a",{href:"https://facebook.github.io/zstd/",target:"_blank",rel:"noreferrer"},"Zstandard Home")]),e("li",null,[e("a",{href:"https://www.linux-magazine.com/Issues/2018/215/Command-Line-zstd",target:"_blank",rel:"noreferrer"},"Command Line – zstd")]),e("li",null,[e("a",{href:"https://engineering.fb.com/2018/12/19/core-data/zstandard/",target:"_blank",rel:"noreferrer"},"5 ways Facebook improved compression at scale with Zstandard")]),e("li",null,[e("a",{href:"https://zhuanlan.zhihu.com/p/353505496",target:"_blank",rel:"noreferrer"},"Fast and Efficient! The Compression Wizard - zstd")])],-1),P=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"zstd")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"zstd")])])])],-1);function Z(S,T,B,A,L,R){const s=i("PackagePage");return n(),r("div",null,[l(s,null,{default:t(()=>[c,h]),abstract:t(()=>[p,m,f,u,g,b,z,_,k,x,y,v,w,F,C,E]),install:t(()=>[P]),_:1})])}const N=o(d,[["render",Z]]);export{I as __pageData,N as default};

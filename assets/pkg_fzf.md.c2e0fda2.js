import{_ as s,C as i,o as l,c as o,H as r,w as a,k as e,a as t}from"./chunks/framework.98e11516.js";const R=JSON.parse('{"title":"fzf","titleTemplate":"x-cmd package | fzf is a general-purpose command-line fuzzy finder","description":"x-cmd package fzf | fzf is a general-purpose command-line fuzzy finder","frontmatter":{"name":"fzf","titleTemplate":"x-cmd package | fzf is a general-purpose command-line fuzzy finder","head":[["meta",{"name":"og:title","content":"fzf | x-cmd package"}],["meta",{"name":"og:description","content":"fzf is a general-purpose command-line fuzzy finder"}],["meta",{"name":"description","content":"x-cmd package fzf | fzf is a general-purpose command-line fuzzy finder"}]],"links":[{"type":"1min","text":"fzf","link":"/1min/fzf"},{"type":"mod","text":"`x env` => usage","link":"/mod/env"}],"homepage":"https://github.com/junegunn/fzf","license":"MIT","version":{"stable":"v0.0.1"},"support":["linux/arm64","darwin/arm64","linux/x64","darwin/x64","win/x64"],"source":{"repack-official":["https://github.com/x-cmd-build/fzf/releases","https://gitcode.net/x-cmd-build/fzf/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/fzf.en","x-term-name":"fzf","x-term-desc":"fzf is a general-purpose command-line fuzzy finder","x-term-size":"large"},"headers":[],"relativePath":"pkg/fzf.md","filePath":"pkg/fzf.md"}'),c={name:"pkg/fzf.md"},f=e("h1",{id:"fzf",tabindex:"-1"},[t("fzf "),e("a",{class:"header-anchor",href:"#fzf","aria-label":'Permalink to "fzf"'},"​")],-1),d=e("p",{class:"x-desc"},"fzf is a general-purpose command-line fuzzy finder",-1),u=e("h2",{id:"introduction",tabindex:"-1"},[t("Introduction "),e("a",{class:"header-anchor",href:"#introduction","aria-label":'Permalink to "Introduction"'},"​")],-1),h=e("p",null,[e("code",null,"fzf"),t(" is a command-line fuzzy search tool written in Go. It is used to quickly locate and select content within large amounts of text data, and can be used with any list (e.g. files, command history, processes, hostnames, bookmarks, git commits, etc.).")],-1),p=e("h2",{id:"first-time-users",tabindex:"-1"},[t("First-time Users "),e("a",{class:"header-anchor",href:"#first-time-users","aria-label":'Permalink to "First-time Users"'},"​")],-1),m=e("ol",null,[e("li",null,[t("This article demonstrates how to combine "),e("code",null,"fzf"),t(" with other tools (e.g. "),e("code",null,"cat"),t(", "),e("code",null,"bat"),t(") to search for and preview files.")]),e("li",null,[t("x-cmd also provides a "),e("a",{href:"/1min/fzf"},"1-minute tutorial"),t(" to help you get started quickly.")])],-1),g=e("h2",{id:"features",tabindex:"-1"},[t("Features "),e("a",{class:"header-anchor",href:"#features","aria-label":'Permalink to "Features"'},"​")],-1),z=e("ol",null,[e("li",null,[e("strong",null,"Portable and Dependency-free"),t(": It has no external dependencies and can be easily installed and used on multiple operating systems.")]),e("li",null,[e("strong",null,"Extremely fast"),t(": fzf uses efficient fuzzy matching algorithms and preprocessing techniques to quickly filter and select large amounts of text data.")]),e("li",null,[e("strong",null,"Comprehensive feature set"),t(": fzf provides various features, including fuzzy matching, multi-select, support for regular expressions, custom layouts, and auto-completion.")]),e("li",null,[e("strong",null,"Supports Vim/Neovim plugins and keyboard event bindings")])],-1),y=e("h2",{id:"competitors-and-related-works",tabindex:"-1"},[t("Competitors and Related Works "),e("a",{class:"header-anchor",href:"#competitors-and-related-works","aria-label":'Permalink to "Competitors and Related Works"'},"​")],-1),b=e("ol",null,[e("li",null,[e("a",{href:"/mod/pick"},"x pick"),t(" is a command-line data selector developed by x-cmd. It is written in shell and awk, and its functionality is not as rich as "),e("code",null,"fzf"),t(". It can run on mainstream POSIX shells and is integrated into x-cmd without the need for additional downloads.")]),e("li",null,[e("a",{href:"https://github.com/davatorium/rofi",target:"_blank",rel:"noreferrer"},"rofi"),t(" is a powerful windowing widget primarily used for tasks such as application launching, file searching, window selection, etc. Although its primary purpose is not fuzzy searching, it has excellent text selection capabilities.")]),e("li",null,[e("a",{href:"https://github.com/peco/peco",target:"_blank",rel:"noreferrer"},"peco"),t(" is another interactive filtering tool that focuses on command-line selection and searching. It supports fuzzy searching and real-time filtering, and is easy to integrate into different command-line tools.")]),e("li",null,[e("a",{href:"https://github.com/garybernhardt/selecta",target:"_blank",rel:"noreferrer"},"selecta"),t(" is a selector written in Ruby that allows users to interactively select from a list of text items. It has fuzzy searching functionality similar to fzf.")]),e("li",null,[e("a",{href:"https://github.com/mooz/percol",target:"_blank",rel:"noreferrer"},"percol"),t(" is an interactive selector written in Python that supports fzf-style fuzzy searching. It allows users to filter and select through the command line.")])],-1),k=e("h1",{id:"further-reading",tabindex:"-1"},[t("Further Reading "),e("a",{class:"header-anchor",href:"#further-reading","aria-label":'Permalink to "Further Reading"'},"​")],-1),x=e("ul",null,[e("li",null,[t("The project is hosted on "),e("a",{href:"https://github.com/junegunn/fzf",target:"_blank",rel:"noreferrer"},"GitHub: fzf"),t(", where the README document provides detailed parameter functionality and usage instructions.")]),e("li",null,[e("a",{href:"https://www.freecodecamp.org/news/fzf-a-command-line-fuzzy-finder-missing-demo-a7de312403ff",target:"_blank",rel:"noreferrer"},"Why you should be using fzf, the command line fuzzy finder"),t(" is an informative article that extensively introduces the advantages and usage tips of fzf, accompanied by direct demonstrations.")]),e("li",null,[e("a",{href:"https://thevaluable.dev/practical-guide-fzf-example/",target:"_blank",rel:"noreferrer"},"A Practical Guide to fzf: Building a File Explorer")]),e("li",null,[e("a",{href:"https://thevaluable.dev/fzf-shell-integration/",target:"_blank",rel:"noreferrer"},"A Practical Guide to fzf: Shell Integration")])],-1),_=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"fzf")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"fzf")])])])],-1);function v(w,E,F,P,C,I){const n=i("PackagePage");return l(),o("div",null,[r(n,null,{default:a(()=>[f,d]),abstract:a(()=>[u,h,p,m,g,z,y,b,k,x]),install:a(()=>[_]),_:1})])}const T=s(c,[["render",v]]);export{R as __pageData,T as default};

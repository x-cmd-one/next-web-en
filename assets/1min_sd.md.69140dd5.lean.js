import{_ as t,C as o,o as l,c as p,H as c,w as a,k as s,a as e}from"./chunks/framework.98e11516.js";const k=JSON.parse('{"title":"sd","titleTemplate":"x-cmd 1 minute get started","description":"x-cmd 1 minute | sd get started | sd is an intuitive find & replace CLI","frontmatter":{"name":"sd","titleTemplate":"x-cmd 1 minute get started","head":[["meta",{"name":"og:title","content":"x-cmd 1 minute | sd get started"}],["meta",{"name":"og:description","content":"sd is an intuitive find & replace CLI"}],["meta",{"name":"description","content":"x-cmd 1 minute | sd get started | sd is an intuitive find & replace CLI"}]],"items":[{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">echo</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;before, after&#39;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #F97583\\">|</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">sd</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;,&#39;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;\\\\n&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">echo</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;before, after&#39;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #D73A49\\">|</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">sd</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;,&#39;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;\\\\n&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"从 stdin 中获取数据并将其中的逗号替换为换行符","en":"Obtain data from stdin and replace commas with line breaks"},"desc":"Obtain data from stdin and replace commas with line breaks"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">echo</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&quot;sample with /path/&quot;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #F97583\\">|</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">sd</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;.*(/.*/)&#39;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;$1&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">echo</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&quot;sample with /path/&quot;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #D73A49\\">|</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">sd</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;.*(/.*/)&#39;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;$1&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"从包含斜杠的字符串中提取内容","en":"Extracting stuff out of strings containing slashes"},"desc":"Extracting stuff out of strings containing slashes"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">echo</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;f(x) = 4x + 12&#39;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #F97583\\">|</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">sd</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;(\\\\d+)&#39;</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">&#39;($1)&#39;</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">echo</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;f(x) = 4x + 12&#39;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #D73A49\\">|</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">sd</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;(\\\\d+)&#39;</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">&#39;($1)&#39;</span></span></code></pre>\\n</div>","#desc":{"cn":"将字符串中的数字用括号括起来","en":"Enclose numbers in parentheses in a string"},"desc":"Enclose numbers in parentheses in a string"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">sd</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #79B8FF\\">-p</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">temp</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">i</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">example.py</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">sd</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #005CC5\\">-p</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">temp</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">i</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">example.py</span></span></code></pre>\\n</div>","#desc":{"cn":"对文件内容进行查找替换后输出到 stdout ，而不写入文件中","en":"Search and replace the file content and output it to stdout without writing it to the file"},"desc":"Search and replace the file content and output it to stdout without writing it to the file"},{"cmd":"<div class=\\"language-sh vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sh</span><pre v-pre class=\\"shiki github-dark vp-code-dark\\" ><code><span class=\\"line\\"><span style=\\"color: #79B8FF\\">x</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">sd</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">temp</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">i</span><span style=\\"color: #E1E4E8\\"> </span><span style=\\"color: #9ECBFF\\">example.py</span></span></code></pre><pre v-pre class=\\"shiki github-light vp-code-light\\" ><code><span class=\\"line\\"><span style=\\"color: #005CC5\\">x</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">sd</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">temp</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">i</span><span style=\\"color: #24292E\\"> </span><span style=\\"color: #032F62\\">example.py</span></span></code></pre>\\n</div>","#desc":{"cn":"对文件内容进行查找替换并保存到文件中","en":"Search and replace the file content and save it to the file"},"desc":"Search and replace the file content and save it to the file"}],"aside":false,"outline":false,"x-term-speg":"1min/sd.en","x-term-name":"sd","x-term-desc":"sd is an intuitive find & replace CLI","x-term-size":"large","links":[{"type":"pkg","text":"sd","link":"/pkg/sd"}]},"headers":[],"relativePath":"1min/sd.md","filePath":"1min/sd.md"}'),r={name:"1min/sd.md"},i=s("h1",{id:"sd",tabindex:"-1"},[e("sd "),s("a",{class:"header-anchor",href:"#sd","aria-label":'Permalink to "sd"'},"​")],-1),d=s("p",{class:"visually-hidden"}," sd is an intuitive find & replace CLI ",-1),y=s("p",null,[e("The goal of this tutorial is to help you get started quickly with "),s("code",null,"sd"),e(" in 1 minute. The tutorial can be divided into the following 3 points:")],-1),E=s("ol",null,[s("li",null,"By default, expressions are treated as regular expressions. You can use the '-s' parameter to disable regular expressions and perform string text replacements."),s("li",null,"String replacements can be done based on regular expression capture groups. You can identify the pattern to be matched and use capture groups to capture parts of the pattern for referencing during replacement. This makes replacement operations highly flexible and suitable for various requirements."),s("li",null,[s("code",null,"sd"),e(" supports searching and replacing strings in files. It can modify the content of files, and after making the modifications, you can use the preview feature to view the changed content and ensure the correctness of the replacement operation.")])],-1),h=s("p",null,"For more complex operations and usage, you can refer to:",-1),u=s("ul",null,[s("li",null,[s("a",{href:"/pkg/sd"},"x-cmd pkg for sd")])],-1);function m(F,g,f,C,v,x){const n=o("OneMinutePage");return l(),p("div",null,[c(n,null,{default:a(()=>[i,d]),abstract:a(()=>[y,E,h,u]),_:1})])}const B=t(r,[["render",m]]);export{k as __pageData,B as default};

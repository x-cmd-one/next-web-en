import{_ as o,C as e,o as p,c,H as t,w as r,k as s,a,Y as i}from"./chunks/framework.98e11516.js";const D=JSON.parse('{"title":"x sha1|sha256|sha512","description":"x sha1 | x-cmd module | Calculate the SHA1 hashsum of file","frontmatter":{"head":[["meta",{"name":"og:title","content":"x sha1 | x-cmd"}],["meta",{"name":"og:description","content":"Calculate the SHA1 hashsum of file"}],["meta",{"name":"description","content":"x sha1 | x-cmd module | Calculate the SHA1 hashsum of file"}]]},"headers":[],"relativePath":"mod/sha1.md","filePath":"mod/sha1.md"}'),h={name:"mod/sha1.md"},d=s("h1",{id:"x-sha1-sha256-sha512",tabindex:"-1"},[a("x sha1|sha256|sha512 "),s("a",{class:"header-anchor",href:"#x-sha1-sha256-sha512","aria-label":'Permalink to "x sha1|sha256|sha512"'},"​")],-1),u=s("p",{class:"x-desc"},"Calculate the SHA1 hashsum of file",-1),y=s("p",null,"According to the existing executable files on the current platform, automatically use shasum or sha1sum to calculate the SHA1 of the file.",-1),m=s("p",null,"If there are input arguments, these arguments will be treated as file paths. In this case, the output will be: one line corresponds to one file hash value, with a newline character at the end.",-1),E=s("p",null,"If no input arguments are provided, the content will be read from stdin and its SHA1 hash value will be calculated and output.",-1),f=s("p",null,"If you need to calculate sha256, sha3, or sha512, you just need to replace sha1 with sha256, sha3, or sha512 in the command mentioned in this text.",-1),g=s("p",null,"Additionally, sha256 can be abbreviated as sha2, and sha512 can be abbreviated as sha5.",-1),F=i('<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sha1</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">sha256</span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;">sha512</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">#</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sha1</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">sha256</span><span style="color:#D73A49;">|</span><span style="color:#032F62;">sha512</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">#</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><h2 id="arguments" tabindex="-1">Arguments <a class="header-anchor" href="#arguments" aria-label="Permalink to &quot;Arguments&quot;">​</a></h2><div class="table-wrap"><table><thead><tr><th>Argument</th><th>Description</th></tr></thead><tbody><tr><td><code>#n</code></td><td></td></tr></tbody></table></div><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p>Calculate all files in the current folder that start with the letter &quot;a&quot; and have a file extension of .txt (assuming there are not many of these files and they are all normal files, and the number of files will not exceed the limit of command arguments that can be accepted).</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sha1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#79B8FF;">*</span><span style="color:#9ECBFF;">.txt</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sha1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#005CC5;">*</span><span style="color:#032F62;">.txt</span></span></code></pre></div><p>Calculate the SHA1 of all files in the current directory (excluding folders and special files such as device files).</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">fsiter</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--file</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">args</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;x sha1 $@&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fsiter</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--file</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">args</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;x sha1 $@&#39;</span></span></code></pre></div><p>Read multiple file paths from stdin and calculate the SHA1 for each of these files separately.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">args</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;x sha1 $@&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">args</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;x sha1 $@&#39;</span></span></code></pre></div><br>',12),C=s("h2",{id:"related-link",tabindex:"-1"},[a("Related Link "),s("a",{class:"header-anchor",href:"#related-link","aria-label":'Permalink to "Related Link"'},"​")],-1),b=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"TIP"),s("p",null,[a("In interactive terminal ( zsh, bash ... ), Can use "),s("kbd",null,"Tab"),a(" to get completion information")]),s("p",null,[a("Run "),s("code",null,"CMD SUBCOMMAND --help"),a(" for more information on a command")])],-1);function x(_,v,k,A,B,S){const l=e("AdsContent"),n=e("DocsLinkCard");return p(),c("div",null,[d,u,y,m,E,f,g,t(l),F,t(n,null,{default:r(()=>[C]),_:1}),b])}const P=o(h,[["render",x]]);export{D as __pageData,P as default};

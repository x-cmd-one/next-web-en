import{_ as i,C as s,o as r,c as o,H as p,w as n,k as e,a as t}from"./chunks/framework.98e11516.js";const T=JSON.parse('{"title":"pdfcpu","titleTemplate":"x-cmd package | pdfcpu is a PDF processing library written in Go supporting encryption","description":"x-cmd package pdfcpu | pdfcpu is a PDF processing library written in Go supporting encryption","frontmatter":{"name":"pdfcpu","titleTemplate":"x-cmd package | pdfcpu is a PDF processing library written in Go supporting encryption","head":[["meta",{"name":"og:title","content":"pdfcpu | x-cmd package"}],["meta",{"name":"og:description","content":"pdfcpu is a PDF processing library written in Go supporting encryption"}],["meta",{"name":"description","content":"x-cmd package pdfcpu | pdfcpu is a PDF processing library written in Go supporting encryption"}]],"links":[{"type":"1min","text":"pdfcpu","link":"/1min/pdfcpu"},{"type":"mod","text":"`x env` => usage","link":"/mod/env"}],"homepage":"https://github.com/pdfcpu/pdfcpu","license":"Apache-2.0 license","version":{"stable":"0.4.1"},"support":["linux/arm64","darwin/arm64","linux/x64","darwin/x64","win/x64"],"source":{"repack-official":["https://github.com/x-cmd-build/pdfcpu/releases","https://gitcode.net/x-cmd-build/pdfcpu/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/pdfcpu.en","x-term-name":"pdfcpu","x-term-desc":"pdfcpu is a PDF processing library written in Go supporting encryption","x-term-size":"large"},"headers":[],"relativePath":"pkg/pdfcpu.md","filePath":"pkg/pdfcpu.md"}'),c={name:"pkg/pdfcpu.md"},l=e("h1",{id:"pdfcpu",tabindex:"-1"},[t("pdfcpu "),e("a",{class:"header-anchor",href:"#pdfcpu","aria-label":'Permalink to "pdfcpu"'},"​")],-1),d=e("p",{class:"x-desc"},"pdfcpu is a PDF processing library written in Go supporting encryption",-1),u=e("h2",{id:"introduction",tabindex:"-1"},[t("Introduction "),e("a",{class:"header-anchor",href:"#introduction","aria-label":'Permalink to "Introduction"'},"​")],-1),f=e("p",null,"pdfcpu is a PDF processing library written in Go. It provides both an API and a CLI. pdfcpu offers a rich set of PDF manipulation features, allowing users to create configuration files for managing and using custom fonts effectively.",-1),h=e("h2",{id:"first-time-users",tabindex:"-1"},[t("First-time Users "),e("a",{class:"header-anchor",href:"#first-time-users","aria-label":'Permalink to "First-time Users"'},"​")],-1),m=e("ol",null,[e("li",null,"This article's demo demonstrates using the pdfcpu command to validate PDF files for compliance and split PDF files into multiple single-page PDFs."),e("li",null,[t("X-CMD also offers a "),e("a",{href:"/1min/pdfcpu"},"1-minute tutorial"),t(" to help you get started.")])],-1),g=e("h2",{id:"versatile-support",tabindex:"-1"},[t("Versatile Support "),e("a",{class:"header-anchor",href:"#versatile-support","aria-label":'Permalink to "Versatile Support"'},"​")],-1),y=e("p",null,"pdfcpu's command-line interface (CLI) offers over 20 features, including batch merging, splitting, rotating, resizing, adding watermarks, annotations, bookmarks, and more, catering to the majority of PDF manipulation needs.",-1),_=e("h2",{id:"performance",tabindex:"-1"},[t("Performance "),e("a",{class:"header-anchor",href:"#performance","aria-label":'Permalink to "Performance"'},"​")],-1),b=e("p",null,"Leveraging Go's excellent concurrency support and performance advantages, pdfcpu achieves outstanding processing speeds. The author, on a relatively ordinary computer (equipped with a 9th-gen mobile i5 processor), used its merge command to combine five PDF files, each 95MB in size, into one PDF file, taking only 775 milliseconds.",-1),k=e("h2",{id:"secure-encryption-handling",tabindex:"-1"},[t("Secure Encryption Handling "),e("a",{class:"header-anchor",href:"#secure-encryption-handling","aria-label":'Permalink to "Secure Encryption Handling"'},"​")],-1),P=e("p",null,"pdfcpu provides robust file encryption capabilities, allowing you to encrypt, decrypt, change passwords, and manage user permissions for PDF files. This helps ensure the security and confidentiality of your PDF documents.",-1),x=e("h2",{id:"further-reading",tabindex:"-1"},[t("Further Reading "),e("a",{class:"header-anchor",href:"#further-reading","aria-label":'Permalink to "Further Reading"'},"​")],-1),F=e("ul",null,[e("li",null,[t("Project hosted on "),e("a",{href:"https://github.com/pdfcpu/pdfcpu",target:"_blank",rel:"noreferrer"},"GitHub")]),e("li",null,[t("Detailed usage instructions in the "),e("a",{href:"http://pdfcpu.io/",target:"_blank",rel:"noreferrer"},"official documentation")]),e("li",null,[e("a",{href:"https://products.fileformat.com/pdf/go/pdfcpu/",target:"_blank",rel:"noreferrer"},"Getting Started with PDFCPU")])],-1),v=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"pdfcpu")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"pdfcpu")])])])],-1);function D(w,E,C,G,B,I){const a=s("PackagePage");return r(),o("div",null,[p(a,null,{default:n(()=>[l,d]),abstract:n(()=>[u,f,h,m,g,y,_,b,k,P,x,F]),install:n(()=>[v]),_:1})])}const V=i(c,[["render",D]]);export{T as __pageData,V as default};

import{_ as r,C as n,o as i,c as s,H as l,w as t,k as e,a as o}from"./chunks/framework.98e11516.js";const T=JSON.parse('{"title":"doggo","titleTemplate":"x-cmd package | doggo is a modern command-line DNS client (like dig) written in Golang","description":"x-cmd package doggo | doggo is a modern command-line DNS client (like dig) written in Golang","frontmatter":{"name":"doggo","titleTemplate":"x-cmd package | doggo is a modern command-line DNS client (like dig) written in Golang","head":[["meta",{"name":"og:title","content":"doggo | x-cmd package"}],["meta",{"name":"og:description","content":"doggo is a modern command-line DNS client (like dig) written in Golang"}],["meta",{"name":"description","content":"x-cmd package doggo | doggo is a modern command-line DNS client (like dig) written in Golang"}]],"links":[{"type":"1min","text":"doggo","link":"/1min/doggo"},{"type":"mod","text":"`x env` => usage","link":"/mod/env"}],"homepage":"https://github.com/mr-karan/doggo","license":"MIT","version":{"stable":"v0.5.6"},"support":["linux/arm64","darwin/arm64","linux/x64","darwin/x64","win/x64"],"source":{"repack-official":["https://github.com/x-cmd-build/doggo/releases","https://gitcode.net/x-cmd-build/doggo/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/doggo.en","x-term-name":"doggo","x-term-desc":"doggo is a modern command-line DNS client (like dig) written in Golang","x-term-size":"large"},"headers":[],"relativePath":"pkg/doggo.md","filePath":"pkg/doggo.md"}'),d={name:"pkg/doggo.md"},c=e("h1",{id:"doggo",tabindex:"-1"},[o("doggo "),e("a",{class:"header-anchor",href:"#doggo","aria-label":'Permalink to "doggo"'},"​")],-1),g=e("p",{class:"x-desc"},"doggo is a modern command-line DNS client (like dig) written in Golang",-1),m=e("h2",{id:"abstract",tabindex:"-1"},[o("Abstract "),e("a",{class:"header-anchor",href:"#abstract","aria-label":'Permalink to "Abstract"'},"​")],-1),u=e("p",null,[o("Doggo is a DNS client developed by Karan Sharma in 2020 using the Go programming language. It is similar to the "),e("code",null,"dig"),o(" command but is designed to output DNS query results in a modern, concise, and readable format.")],-1),p=e("h2",{id:"get-started-for-first-time-users",tabindex:"-1"},[o("Get Started for First-Time Users "),e("a",{class:"header-anchor",href:"#get-started-for-first-time-users","aria-label":'Permalink to "Get Started for First-Time Users"'},"​")],-1),h=e("ol",null,[e("li",null,'This document demonstrates how to quickly use the "doggo" command with x-cmd to query DNS records for a specified domain and retrieve the domain server records for "github.com" from the "9.9.9.9" DNS server.'),e("li",null,[o("x-cmd provides a "),e("a",{href:"/1min/doggo"},"1-Minute Doggo Tutorial"),o(" for an immediate experience.")])],-1),f=e("h2",{id:"key-features",tabindex:"-1"},[o("Key Features "),e("a",{class:"header-anchor",href:"#key-features","aria-label":'Permalink to "Key Features"'},"​")],-1),k=e("ol",null,[e("li",null,[e("strong",null,"Support for Multiple Transport Protocols"),o(": This includes DoH (HTTPS), DoT (TLS), DoQ (QUIC), TCP, UDP, and DNSCrypt to meet various use cases.")]),e("li",null,[e("strong",null,"Flexible Query Options"),o(": Four key DNS query parameters are provided, including DNS hostname records, DNS record types, specific DNS server addresses, and the network category of DNS records. It also supports querying and resolving both IPv4 and IPv6, ensuring comprehensive DNS record information.")]),e("li",null,[e("strong",null,"Multiple Output Formats"),o(": In the default interactive mode, Doggo outputs information in a well-readable data format. It also supports outputting information in JSON format for further data processing or scripting.")])],-1),x=e("h2",{id:"similar-tools-and-competitors",tabindex:"-1"},[o("Similar Tools and Competitors "),e("a",{class:"header-anchor",href:"#similar-tools-and-competitors","aria-label":'Permalink to "Similar Tools and Competitors"'},"​")],-1),b=e("ul",null,[e("li",null,[e("a",{href:"https://github.com/ogham/dog/",target:"_blank",rel:"noreferrer"},"dog"),o(": A DNS command-line client built by Benjamin Sago using Rust. It served as the inspiration for the Doggo project but hasn't received iterative updates since its initial release in 2020. The same author also developed "),e("a",{href:"/pkg/exa"},"exa"),o(", a modern replacement for the "),e("code",null,"ls"),o(" command built using Rust. Interested readers can explore further.")])],-1),_=e("h2",{id:"further-exploration",tabindex:"-1"},[o("Further Exploration "),e("a",{class:"header-anchor",href:"#further-exploration","aria-label":'Permalink to "Further Exploration"'},"​")],-1),y=e("ul",null,[e("li",null,[e("a",{href:"https://github.com/mr-karan/doggo",target:"_blank",rel:"noreferrer"},"GitHub: Doggo")]),e("li",null,[e("a",{href:"https://github.com/mr-karan/doggo#usage-examples",target:"_blank",rel:"noreferrer"},"GitHub: Doggo Common Use Cases")]),e("li",null,[e("a",{href:"https://www.linuxuprising.com/2021/04/doggo-is-dns-lookup-utility-with.html",target:"_blank",rel:"noreferrer"},"Doggo Is A DNS Lookup Utility With Colorful Output")])],-1),D=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"doggo")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"doggo")])])])],-1);function v(S,N,w,F,C,E){const a=n("PackagePage");return i(),s("div",null,[l(a,null,{default:t(()=>[c,g]),abstract:t(()=>[m,u,p,h,f,k,x,b,_,y]),install:t(()=>[D]),_:1})])}const G=r(d,[["render",v]]);export{T as __pageData,G as default};

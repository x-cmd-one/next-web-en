import{_ as t,C as l,o as i,c as s,H as r,w as n,k as e,a as o}from"./chunks/framework.98e11516.js";const j=JSON.parse('{"title":"go","titleTemplate":"x-cmd package | A statically strongly typed, compiled, and concurrent open source programming language developed by Google","description":"x-cmd package go | A statically strongly typed, compiled, and concurrent open source programming language developed by Google","frontmatter":{"name":"go","titleTemplate":"x-cmd package | A statically strongly typed, compiled, and concurrent open source programming language developed by Google","head":[["meta",{"name":"og:title","content":"go | x-cmd package"}],["meta",{"name":"og:description","content":"A statically strongly typed, compiled, and concurrent open source programming language developed by Google"}],["meta",{"name":"description","content":"x-cmd package go | A statically strongly typed, compiled, and concurrent open source programming language developed by Google"}]],"links":[{"type":"1min","text":"go","link":"/1min/go"},{"type":"mod","text":"`x env` => usage","link":"/mod/env"}],"homepage":"https://golang.google.cn/dl/","license":"MIT","version":{"stable":"1.20.3"},"support":["win/x64","linux/x64","linux/arm64","darwin/x64","darwin/arm64"],"source":{"official":["https://go.dev/dl","https://golang.google.cn/dl"]},"aside":false,"outline":false,"x-term-speg":"pkg/go.en","x-term-name":"go","x-term-desc":"A statically strongly typed^comma; compiled^comma; and concurrent open source programming language developed by Google","x-term-size":"large"},"headers":[],"relativePath":"pkg/go.md","filePath":"pkg/go.md"}'),c={name:"pkg/go.md"},d=e("h1",{id:"go",tabindex:"-1"},[o("go "),e("a",{class:"header-anchor",href:"#go","aria-label":'Permalink to "go"'},"​")],-1),g=e("p",{class:"x-desc"},"A statically strongly typed, compiled, and concurrent open source programming language developed by Google",-1),u=e("h2",{id:"introduction",tabindex:"-1"},[o("Introduction "),e("a",{class:"header-anchor",href:"#introduction","aria-label":'Permalink to "Introduction"'},"​")],-1),p=e("p",null,"Go language (or Golang) is an open-source programming language developed by Google, which was created in 2006. Its design goal is to combine the development speed of dynamic languages like Python with the performance and safety of compiled languages like C/C++. Its syntax is similar to C language, but it has some differences in variable declaration. It supports garbage collection.",-1),m=e("ol",null,[e("li",null,[e("strong",null,"Native support for concurrency"),o(": It has native design advantages in multi-core concurrency, without the need for third-party libraries, developer's programming skills, and experience.")]),e("li",null,[e("strong",null,"Unified code style"),o(": Code formatting is no longer a matter of personal preference for developers, but a mandatory specification. It has a unified set of formatting tools called "),e("code",null,"go fmt"),o(", which ensures consistent code style written by different developers.")]),e("li",null,[e("strong",null,"Simplified syntax"),o(": The language style is similar to C language, but it removes many rarely used syntax in C language, such as inheritance, overloading, generics, exceptions, constructors, and operator overloading. The removal of these syntax makes Go language syntax more concise, easy to learn, and use.")]),e("li",null,[e("strong",null,"Automatic garbage collection"),o(": Developers don't need to worry about memory allocation and deallocation, which greatly reduces the burden on developers.")])],-1),h=e("h2",{id:"first-time-users",tabindex:"-1"},[o("First-time Users "),e("a",{class:"header-anchor",href:"#first-time-users","aria-label":'Permalink to "First-time Users"'},"​")],-1),y=e("ol",null,[e("li",null,"This article demonstrates the process of quickly enabling Go compilation and running a hello world program using x-cmd."),e("li",null,[o("x-cmd provides a "),e("a",{href:"/1min/go"},"1min"),o(" tutorial, which shows how to use "),e("code",null,"go fmt"),o(", "),e("code",null,"go build"),o(", as well as basic functionalities like networking and processes.")])],-1),f=e("h2",{id:"technical-features",tabindex:"-1"},[o("Technical Features "),e("a",{class:"header-anchor",href:"#technical-features","aria-label":'Permalink to "Technical Features"'},"​")],-1),b=e("ol",null,[e("li",null,[e("strong",null,"Enforced code style"),o(": "),e("ul",null,[e("li",null,"There are strict requirements for naming conventions, for example, npm package ID in Go follows strict camel case style, uniformly as NpmPackageID, instead of NPMPackgeID or NpmPackageID."),e("li",null,"Code files are formatted according to the officially specified style before compilation, including trailing blank lines, trailing spaces, etc. It is no longer optional and is enforced before compilation."),e("li",null,"Although these measures may be controversial, they objectively reduce disputes within project teams about code style consistency (to some extent, the Go language development team takes over the resentment originally borne by project managers), and facilitate team collaboration and rapid development.")])]),e("li",null,[e("strong",null,"Simple and out-of-the-box package management, code testing, formatting, building, and running tools"),o(": "),e("ul",null,[e("li",null,"Package management (go get): It can download or update specified code packages and their dependencies from the internet based on requirements and actual situations, and compile and install them."),e("li",null,"Code testing (go test): Used for testing programs written in Go language."),e("li",null,"Code formatting (go fmt): Used to format Go language source code files."),e("li",null,"Code building (go build): Used to compile specified source code files or code packages and their dependencies."),e("li",null,"Package running (go run): Used to compile and run specified source code files or code packages.")])]),e("li",null,[e("strong",null,"Concurrency mechanism"),o(": Concurrency mechanism characterized by "),e("code",null,"go routine"),o(" is very easy to understand and does not require additional complex development patterns.")]),e("li",null,[e("strong",null,"Cross-compilation"),o(": The built-in compiler can easily cross-compile binary executable files that can run on other systems and hardware platforms.")]),e("li",null,[e("strong",null,"WebAssembly"),o(": Go is one of the languages that provide WebAssembly as a compilation target directly in its toolchain. Its efficiency and the efficiency and simplicity of its compilation tools give it a certain competitive advantage in the field of WASM.")])],-1),v=e("p",null,"Due to the above features, Go has been widely used in the past decade for network applications, cloud computing, and distributed network-related tools and projects that require high IO efficiency.",-1),k=e("h2",{id:"competitor-analysis",tabindex:"-1"},[o("Competitor Analysis "),e("a",{class:"header-anchor",href:"#competitor-analysis","aria-label":'Permalink to "Competitor Analysis"'},"​")],-1),_=e("h3",{id:"compiled-languages",tabindex:"-1"},[o("Compiled Languages "),e("a",{class:"header-anchor",href:"#compiled-languages","aria-label":'Permalink to "Compiled Languages"'},"​")],-1),x=e("p",null,"Rust, Zig, and other new compiled development languages are often compared with Go.",-1),w=e("ol",null,[e("li",null,"In terms of runtime efficiency, Go may be slightly inferior in some scenarios."),e("li",null,"To ensure compilation speed, Go skips some optimizations during compilation."),e("li",null,"Go has built-in garbage collection, eliminating the need for manual memory management by users to simplify the programming model. However, objectively, it may affect response time due to garbage collection."),e("li",null,"For complex programs with high throughput and high concurrency, the efficiency difference of Go is not significant. On the contrary, because the development model of Go is often simpler, it improves project maintainability."),e("li",null,"Of course, for teams pursuing extreme performance and relatively stable requirements, Rust, Zig, and traditional C/C++ are better choices."),e("li",null,"Due to Go's built-in garbage collection, the size of compiled WASM is larger compared to Rust and C/C++.")],-1),C=e("h3",{id:"interpreted-languages",tabindex:"-1"},[o("Interpreted Languages "),e("a",{class:"header-anchor",href:"#interpreted-languages","aria-label":'Permalink to "Interpreted Languages"'},"​")],-1),G=e("p",null,"Languages like Node/Deno/Bun, Python, etc., have advantages in development efficiency, but compared to compiled languages, they have some disadvantages in runtime efficiency.",-1),P=e("ol",null,[e("li",null,"Although the aforementioned compiled languages have introduced language-level asynchrony, the computational efficiency is still an advantage of compiled languages."),e("li",null,"Although non-compiled")],-1),I=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"go")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"go")])])])],-1);function A(E,F,T,D,N,B){const a=l("PackagePage");return i(),s("div",null,[r(a,null,{default:n(()=>[d,g]),abstract:n(()=>[u,p,m,h,y,f,b,v,k,_,x,w,C,G,P]),install:n(()=>[I]),_:1})])}const q=t(c,[["render",A]]);export{j as __pageData,q as default};

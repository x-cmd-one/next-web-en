import{_ as r,C as s,o as n,c as l,H as i,w as t,k as e,a}from"./chunks/framework.98e11516.js";const P=JSON.parse('{"title":"yq","titleTemplate":"x-cmd package | yq is a portable command-line YAML, JSON, XML, CSV, TOML and properties processor","description":"x-cmd package yq | yq is a portable command-line YAML, JSON, XML, CSV, TOML and properties processor","frontmatter":{"name":"yq","titleTemplate":"x-cmd package | yq is a portable command-line YAML, JSON, XML, CSV, TOML and properties processor","head":[["meta",{"name":"og:title","content":"yq | x-cmd package"}],["meta",{"name":"og:description","content":"yq is a portable command-line YAML, JSON, XML, CSV, TOML and properties processor"}],["meta",{"name":"description","content":"x-cmd package yq | yq is a portable command-line YAML, JSON, XML, CSV, TOML and properties processor"}]],"links":[{"type":"1min","text":"yq","link":"/1min/yq"},{"type":"mod","text":"`x env` => usage","link":"/mod/env"}],"homepage":"https://github.com/mikefarah/yq","license":"MIT","version":{"stable":"v4.34.2"},"support":["linux/arm64","darwin/arm64","linux/x64","darwin/x64","win/x64"],"source":{"repack-official":["https://github.com/x-cmd-build/yq/releases","https://gitcode.net/x-cmd-build/yq/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/yq.en","x-term-name":"yq","x-term-desc":"yq is a portable command-line YAML^comma; JSON^comma; XML^comma; CSV^comma; TOML and properties processor","x-term-size":"large"},"headers":[],"relativePath":"pkg/yq.md","filePath":"pkg/yq.md"}'),c={name:"pkg/yq.md"},d=e("h1",{id:"yq",tabindex:"-1"},[a("yq "),e("a",{class:"header-anchor",href:"#yq","aria-label":'Permalink to "yq"'},"​")],-1),p=e("p",{class:"x-desc"},"yq is a portable command-line YAML, JSON, XML, CSV, TOML and properties processor",-1),m=e("h2",{id:"introduction",tabindex:"-1"},[a("Introduction "),e("a",{class:"header-anchor",href:"#introduction","aria-label":'Permalink to "Introduction"'},"​")],-1),h=e("p",null,[e("code",null,"yq"),a(" (YAML Query) is a lightweight YAML, JSON, and XML processor primarily used for querying and extracting YAML data. This "),e("code",null,"yq"),a(" package originates from the "),e("a",{href:"https://github.com/mikefarah/yq",target:"_blank",rel:"noreferrer"},"mikefarah/yq"),a(" project and features syntax similar to "),e("a",{href:"/pkg/jq"},[e("code",null,"jq")]),a(". Unlike "),e("a",{href:"https://github.com/kislyuk/yq",target:"_blank",rel:"noreferrer"},"kislyuk/yq"),a(", it does not depend on "),e("code",null,"jq"),a(" and can handle multiple data formats, including YAML, JSON, XML, properties, CSV, and TSV.")],-1),u=e("h2",{id:"first-time-users",tabindex:"-1"},[a("First-time Users "),e("a",{class:"header-anchor",href:"#first-time-users","aria-label":'Permalink to "First-time Users"'},"​")],-1),y=e("ol",null,[e("li",null,[a("This document's demo shows how to quickly use "),e("code",null,"yq"),a(" to query and extract YAML data through x-cmd.")]),e("li",null,[a("x-cmd also provides a "),e("a",{href:"/1min/yq"},"1-minute tutorial"),a(" to help you get started quickly.")])],-1),f=e("h2",{id:"format-conversion-support",tabindex:"-1"},[a("Format Conversion Support "),e("a",{class:"header-anchor",href:"#format-conversion-support","aria-label":'Permalink to "Format Conversion Support"'},"​")],-1),g=e("p",null,[e("code",null,"yq"),a(" can convert YAML data to JSON, ndjson, csv, and tcsv data formats, and it can also perform conversions with XML data.")],-1),q=e("h2",{id:"user-friendly-display-and-operation",tabindex:"-1"},[a("User-Friendly Display and Operation "),e("a",{class:"header-anchor",href:"#user-friendly-display-and-operation","aria-label":'Permalink to "User-Friendly Display and Operation"'},"​")],-1),k=e("ol",null,[e("li",null,[a("Provides completion scripts for common shells (bash/zsh/fish/powershell) that automatically complete parameters and options when using the "),e("code",null,"yq"),a(" command.")]),e("li",null,"Can output colorized YAML while preserving YAML's format, comments, styles, tags, anchors, and aliases."),e("li",null,"Can be used with GitHub Actions for automated pipelines.")],-1),_=e("h2",{id:"syntax-similar-to-jq",tabindex:"-1"},[a("Syntax Similar to jq "),e("a",{class:"header-anchor",href:"#syntax-similar-to-jq","aria-label":'Permalink to "Syntax Similar to jq"'},"​")],-1),b=e("ol",null,[e("li",null,[a("Supports deep data structures: You can use syntax similar to "),e("code",null,"jq"),a(" to access and modify elements at any depth in YAML, JSON, and XML data.")]),e("li",null,"Can query, modify, merge, sort, encode/decode, load, and calculate YAML, JSON, and XML data. It can parse and format dates and times, supporting different time zones.")],-1),x=e("h2",{id:"competitors-and-related-works",tabindex:"-1"},[a("Competitors and Related Works "),e("a",{class:"header-anchor",href:"#competitors-and-related-works","aria-label":'Permalink to "Competitors and Related Works"'},"​")],-1),M=e("p",null,[e("a",{href:"https://github.com/kislyuk/yq",target:"_blank",rel:"noreferrer"},"kislyuk/yq")],-1),L=e("h1",{id:"further-reading",tabindex:"-1"},[a("Further Reading "),e("a",{class:"header-anchor",href:"#further-reading","aria-label":'Permalink to "Further Reading"'},"​")],-1),S=e("ul",null,[e("li",null,[e("a",{href:"https://github.com/mikefarah/yq",target:"_blank",rel:"noreferrer"},"github: yq")]),e("li",null,[e("a",{href:"https://mikefarah.gitbook.io/yq/",target:"_blank",rel:"noreferrer"},"gitbook: yq")]),e("li",null,[e("a",{href:"https://betterprogramming.pub/my-yq-cheatsheet-34f2b672ee58",target:"_blank",rel:"noreferrer"},"My Cheatsheet for the “yq” Tool")]),e("li",null,[e("a",{href:"https://towardsdatascience.com/yq-mastering-yaml-processing-in-command-line-e1ff5ebc0823",target:"_blank",rel:"noreferrer"},"yq: Mastering YAML Processing in Command Line")])],-1),C=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"yq")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"yq")])])])],-1);function v(O,A,F,Y,w,E){const o=s("PackagePage");return n(),l("div",null,[i(o,null,{default:t(()=>[d,p]),abstract:t(()=>[m,h,u,y,f,g,q,k,_,b,x,M,L,S]),install:t(()=>[C]),_:1})])}const T=r(c,[["render",v]]);export{P as __pageData,T as default};

import{_ as s,C as i,o as l,c as o,H as r,w as n,k as e,a}from"./chunks/framework.98e11516.js";const N=JSON.parse('{"title":"bun","titleTemplate":"x-cmd package | bun is a fast all-in-one JavaScript runtime","description":"x-cmd package bun | bun is a fast all-in-one JavaScript runtime","frontmatter":{"name":"bun","titleTemplate":"x-cmd package | bun is a fast all-in-one JavaScript runtime","head":[["meta",{"name":"og:title","content":"bun | x-cmd package"}],["meta",{"name":"og:description","content":"bun is a fast all-in-one JavaScript runtime"}],["meta",{"name":"description","content":"x-cmd package bun | bun is a fast all-in-one JavaScript runtime"}]],"links":[{"type":"1min","text":"bun","link":"/1min/bun"},{"type":"mod","text":"`x env` => usage","link":"/mod/env"}],"homepage":"https://github.com/oven-sh/bun","license":"MIT","version":{"stable":"v0.6.14"},"support":["linux/x64","linux/arm64","darwin/x64","darwin/arm64"],"source":{"repack-official":["https://github.com/x-cmd-build/bun/releases","https://gitcode.net/x-cmd-build/bun/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/bun.en","x-term-name":"bun","x-term-desc":"bun is a fast all-in-one JavaScript runtime","x-term-size":"large"},"headers":[],"relativePath":"pkg/bun.md","filePath":"pkg/bun.md"}'),c={name:"pkg/bun.md"},u=e("h1",{id:"bun",tabindex:"-1"},[a("bun "),e("a",{class:"header-anchor",href:"#bun","aria-label":'Permalink to "bun"'},"​")],-1),d=e("p",{class:"x-desc"},"bun is a fast all-in-one JavaScript runtime",-1),p=e("h2",{id:"abstract",tabindex:"-1"},[a("Abstract "),e("a",{class:"header-anchor",href:"#abstract","aria-label":'Permalink to "Abstract"'},"​")],-1),m=e("p",null,"Bun is a JavaScript runtime built using Zig programming language and JavaScriptCore. It was created by Jarred Sumner in 2021 with the goal of providing a more efficient alternative to Node.js. Here are some of its key features:",-1),h=e("ol",null,[e("li",null,[e("strong",null,"Speed"),a(": Bun offers faster startup times and lower memory usage compared to Node.js.")]),e("li",null,[e("strong",null,"Node Compatibility"),a(": "),e("ol",null,[e("li",null,[a("Bun directly implements hundreds of Node.js built-in libraries, including "),e("code",null,"fs"),a(", "),e("code",null,"path"),a(", "),e("code",null,"Buffer"),a(", and more, in native code.")]),e("li",null,"Bun aims for compatibility with Node.js and its ecosystem in areas such as package management, test builds, and execution.")])]),e("li",null,[e("strong",null,"TypeScript"),a(": Bun can run "),e("code",null,".ts"),a(" and "),e("code",null,".tsx"),a(" files directly, similar to running regular JavaScript files, but without type checking.")])],-1),g=e("h2",{id:"get-started-for-first-time-users",tabindex:"-1"},[a("Get Started for First-Time Users "),e("a",{class:"header-anchor",href:"#get-started-for-first-time-users","aria-label":'Permalink to "Get Started for First-Time Users"'},"​")],-1),b=e("ol",null,[e("li",null,[a('The demo on this page provides an example of "Hello X-CMD," and it also offers an example of running an HTTP server program using '),e("code",null,"bun x"),a(".")]),e("li",null,[a("x-cmd provides a "),e("a",{href:"/1min/bun"},"1-Minute Bun Tutorial"),a(" that demonstrates basic functions such as I/O, file operations, networking, and processes using Bun.")])],-1),f=e("h2",{id:"technical-features",tabindex:"-1"},[a("Technical Features "),e("a",{class:"header-anchor",href:"#technical-features","aria-label":'Permalink to "Technical Features"'},"​")],-1),k=e("ol",null,[e("li",null,"Bun is developed using Zig, a new low-level programming language, with a focus on efficiency."),e("li",null,"Package Management (bun install): It is compatible with npm package management, supports workspaces out of the box, and offers extremely fast dependency installation across all operating systems thanks to global installation caching and binary lock files."),e("li",null,"Code Testing (bun test): It includes built-in compatibility with Jest syntax, simulates the DOM and browser APIs, offers watch mode, and supports snapshot testing, among other testing features."),e("li",null,"Code Building (bun build): It includes a built-in bundling and building tool (bundle)."),e("li",null,[a("Package Runner (bun x): Similar to "),e("code",null,"npx"),a(", it allows running executable remote packages without the need for global installations or adding project dependencies. Thanks to Bun's excellent startup speed, it can quickly execute executable packages to achieve desired functionality.")])],-1),x=e("h2",{id:"competitors",tabindex:"-1"},[a("Competitors "),e("a",{class:"header-anchor",href:"#competitors","aria-label":'Permalink to "Competitors"'},"​")],-1),y=e("ol",null,[e("li",null,[a("Deno is a product that aligns with Bun's goals and was developed by the original creator of Node.js using Rust. It has been around longer and has a relatively more mature ecosystem. x-cmd also includes Deno, and interested readers can refer to "),e("a",{href:"/pkg/deno"},"x-cmd pkg deno"),a(".")]),e("li",null,[a("QuickJS is a very compact (most release packages are less than 1MB) JavaScript engine developed by legendary programmer Fabrice Bellard. This engine provides compatibility with ES2020 syntax and basic built-in libraries. Readers interested in learning more can visit its "),e("a",{href:"https://bellard.org/quickjs/",target:"_blank",rel:"noreferrer"},"official website"),a(". Fabric Bellard has also developed powerful and interesting products like ffmpeg, qemu, Tiny C Compiler, JSLinux, and is a programmer worth following.")])],-1),_=e("h2",{id:"further-reading",tabindex:"-1"},[a("Further Reading "),e("a",{class:"header-anchor",href:"#further-reading","aria-label":'Permalink to "Further Reading"'},"​")],-1),v=e("ul",null,[e("li",null,[a("If you're new to Bun, the "),e("a",{href:"/1min/bun"},"1-Minute Bun Tutorial"),a(" can help you get started quickly.")]),e("li",null,[a("The latest official "),e("a",{href:"https://bun.sh/docs",target:"_blank",rel:"noreferrer"},"Bun documentation"),a(".")]),e("li",null,[e("a",{href:"https://bun.sh/guides",target:"_blank",rel:"noreferrer"},"Common usage patterns and code examples"),a(" with Bun.")])],-1),w=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"bun")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"bun")])])])],-1);function B(S,C,F,T,E,J){const t=i("PackagePage");return l(),o("div",null,[r(t,null,{default:n(()=>[u,d]),abstract:n(()=>[p,m,h,g,b,f,k,x,y,_,v]),install:n(()=>[w]),_:1})])}const I=s(c,[["render",B]]);export{N as __pageData,I as default};

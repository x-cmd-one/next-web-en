import{_ as a,C as s,o as c,c as l,H as r,w as o,k as e,a as t}from"./chunks/framework.98e11516.js";const B=JSON.parse('{"title":"websocat","titleTemplate":"x-cmd package | Netcat, curl and socat for WebSockets","description":"x-cmd package websocat | Netcat, curl and socat for WebSockets","frontmatter":{"name":"websocat","titleTemplate":"x-cmd package | Netcat, curl and socat for WebSockets","head":[["meta",{"name":"og:title","content":"websocat | x-cmd package"}],["meta",{"name":"og:description","content":"Netcat, curl and socat for WebSockets"}],["meta",{"name":"description","content":"x-cmd package websocat | Netcat, curl and socat for WebSockets"}]],"links":[{"type":"1min","text":"websocat","link":"/1min/websocat"},{"type":"mod","text":"`x env` => usage","link":"/mod/env"}],"homepage":"https://github.com/vi/websocat","license":"MIT","version":{"stable":"v0.0.1"},"support":["linux/arm64","linux/x64","darwin/x64","win/x64"],"source":{"repack-official":["https://github.com/x-cmd-build/websocat/releases","https://gitcode.net/x-cmd-build/websocat/-/releases"]},"aside":false,"outline":false,"x-term-speg":"pkg/websocat.en","x-term-name":"websocat","x-term-desc":"Netcat^comma; curl and socat for WebSockets","x-term-size":"large"},"headers":[],"relativePath":"pkg/websocat.md","filePath":"pkg/websocat.md"}'),i={name:"pkg/websocat.md"},d=e("h1",{id:"websocat",tabindex:"-1"},[t("websocat "),e("a",{class:"header-anchor",href:"#websocat","aria-label":'Permalink to "websocat"'},"​")],-1),u=e("p",{class:"x-desc"},"Netcat, curl and socat for WebSockets",-1),p=e("h2",{id:"introduction",tabindex:"-1"},[t("Introduction "),e("a",{class:"header-anchor",href:"#introduction","aria-label":'Permalink to "Introduction"'},"​")],-1),b=e("p",null,[e("code",null,"websocat"),t(" is an open-source command-line tool written in Rust for creating WebSocket connections and implementing WebSocket communication. It draws inspiration from "),e("code",null,"netcat"),t(" but focuses on the WebSocket protocol, similar to "),e("code",null,"netcat"),t(" (or "),e("code",null,"curl"),t("), and can handle the "),e("code",null,"ws://"),t(" protocol and has advanced features similar to "),e("code",null,"socat"),t(".")],-1),h=e("h2",{id:"first-time-users",tabindex:"-1"},[t("First-time Users "),e("a",{class:"header-anchor",href:"#first-time-users","aria-label":'Permalink to "First-time Users"'},"​")],-1),m=e("ol",null,[e("li",null,"The demo in this article demonstrates how to quickly use websocat with x-cmd."),e("li",null,[t("x-cmd also provides a "),e("a",{href:"/1min/websocat"},"1-minute tutorial"),t(" to help you get started quickly.")])],-1),g=e("h2",{id:"key-features",tabindex:"-1"},[t("Key Features "),e("a",{class:"header-anchor",href:"#key-features","aria-label":'Permalink to "Key Features"'},"​")],-1),k=e("ol",null,[e("li",null,[e("strong",null,"Connect and Provide WebSocket Services"),t(": The "),e("code",null,"websocat"),t(" command supports both acting as a WebSocket client and server, allowing you to connect to WebSocket servers or provide WebSocket services.")]),e("li",null,[e("strong",null,"Integration with External Programs"),t(": Allows integration of external programs with WebSocket, enabling interaction with WebSocket servers through stdout/stdin.")]),e("li",null,[e("strong",null,"Text and Binary Modes"),t(": Supports switching between text and binary modes. In text mode, each line is a WebSocket message; in binary mode, each record terminated by a null character is a WebSocket message. "),e("code",null,"websocat"),t(" can convert these lines or records into WebSocket messages and vice versa.")]),e("li",null,[e("strong",null,"UNIX Sockets"),t(": Supports using UNIX sockets (UNIX sockets in the abstract namespace) to connect or listen to WebSocket.")]),e("li",null,[e("strong",null,"Nginx Integration"),t(": "),e("code",null,"websocat"),t(" can be used as a backend service for Nginx, communicating with Nginx through TCP or UNIX sockets, and providing WebSocket functionality.")]),e("li",null,[e("strong",null,"SOCKS5 Proxy"),t(": Supports direct connection or listening to WebSocket using an unauthenticated SOCKS5 server.")]),e("li",null,[e("strong",null,"Automatic Reconnection and Connection Reuse"),t(": With the "),e("code",null,"autoreconnect"),t(" option, automatic reconnection can be achieved.")]),e("li",null,[e("strong",null,"Low-Level WebSocket Client and Server"),t(": "),e("code",null,"websocat"),t(" has a low-level WebSocket client and server that allows overriding the underlying transport connection of WebSocket. It enables customizing the underlying WebSocket transport, such as invoking external programs as the transport layer (for SSL, proxies, etc.).")]),e("li",null,[e("strong",null,"inetd Mode"),t(": Inetd mode (Internet super-server mode) is a running mode of websocat that allows websocat to run in server mode and start a child process to handle WebSocket communication on each connection.")])],-1),w=e("h2",{id:"competitors-and-related-works",tabindex:"-1"},[t("Competitors and Related Works "),e("a",{class:"header-anchor",href:"#competitors-and-related-works","aria-label":'Permalink to "Competitors and Related Works"'},"​")],-1),f=e("p",null,[e("code",null,"websocat"),t(" and "),e("code",null,"netcat"),t(" (also known as "),e("code",null,"nc"),t(") are both command-line tools, but they serve different purposes.")],-1),S=e("ol",null,[e("li",null,[t("Protocol Support: "),e("code",null,"websocat"),t(" focuses on the WebSocket protocol, while "),e("code",null,"netcat"),t(" can handle multiple protocols, including TCP and UDP. If you need to handle WebSocket communication, "),e("code",null,"websocat"),t(" is more suitable.")]),e("li",null,[t("Complexity: "),e("code",null,"websocat"),t(" is simpler and easier to use, especially for quickly establishing and testing WebSocket connections. "),e("code",null,"netcat"),t(" provides more advanced features and is suitable for various network tasks.")]),e("li",null,[t("WebSocket-Specific Features: "),e("code",null,"websocat"),t(" offers specific features for handling WebSocket, such as subprotocol support and ping/pong messages. "),e("code",null,"netcat"),t(" does not support WebSocket.")]),e("li",null,[t("Security: "),e("code",null,"websocat"),t(" specializes in WebSocket, making it easier to ensure secure WebSocket communication. "),e("code",null,"netcat"),t(" is more versatile in terms of supporting multiple protocols and requires careful handling of security issues.")])],-1),y=e("p",null,[t("In summary, if you need to quickly test and interact with WebSocket communication, "),e("code",null,"websocat"),t(" is the better choice. If you need to handle multiple network protocols or perform more complex network tasks, "),e("code",null,"netcat"),t(" may be more suitable. The choice of tool depends on your specific requirements and project needs.")],-1),x=e("h1",{id:"further-reading",tabindex:"-1"},[t("Further Reading "),e("a",{class:"header-anchor",href:"#further-reading","aria-label":'Permalink to "Further Reading"'},"​")],-1),_=e("ul",null,[e("li",null,[e("a",{href:"https://github.com/vi/websocat#websocat",target:"_blank",rel:"noreferrer"},"GitHub: websocat")]),e("li",null,[e("a",{href:"https://www.ruanyifeng.com/blog/2017/05/websocket.html",target:"_blank",rel:"noreferrer"},"Ruanyifeng: WebSocket Tutorial")])],-1),v=e("div",{class:"language-sh vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"sh"),e("pre",{class:"shiki github-dark vp-code-dark"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#79B8FF"}},"x"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"env"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"use"),e("span",{style:{color:"#E1E4E8"}}," "),e("span",{style:{color:"#9ECBFF"}},"websocat")])])]),e("pre",{class:"shiki github-light vp-code-light"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{color:"#005CC5"}},"x"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"env"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"use"),e("span",{style:{color:"#24292E"}}," "),e("span",{style:{color:"#032F62"}},"websocat")])])])],-1);function W(C,P,F,N,E,I){const n=s("PackagePage");return c(),l("div",null,[r(n,null,{default:o(()=>[d,u]),abstract:o(()=>[p,b,h,m,g,k,w,f,S,y,x,_]),install:o(()=>[v]),_:1})])}const R=a(i,[["render",W]]);export{B as __pageData,R as default};
